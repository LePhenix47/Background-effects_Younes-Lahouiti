(()=>{"use strict";(()=>{const{log:t,error:n,table:e,time:i,timeEnd:s,timeStamp:a,timeLog:r,assert:o,clear:c,count:h,countReset:l,group:d,groupCollapsed:v,groupEnd:m,trace:b,profile:u,profileEnd:g,warn:p,debug:f,info:C,dir:w,dirxml:y}=console;function x(t){return t.getContext("2d")}function A(t,n,e){t.width=n,t.height=e}function k(t,n,e,i){t.arc(n,e,i,0,2*Math.PI)}function S(t,n,e=!0,i=!0){if(t>n||n<t)throw new Error("Unexpected error occured in the passed argument values: min > max or max < min");const s=e&&!i,a=!e&&i;return e&&i?Math.floor(Math.random()*(n-t+1))+t:s?Math.floor(Math.random()*(n-t))+t:a?Math.floor(Math.random()*(n-t))+t+1:Math.floor(Math.random()*(n-t-1))+t+1}class H{constructor(t,n,e,i){this.context=t,this.width=n,this.height=e,this.title=i,this.titleDomRect=this.title.getBoundingClientRect(),this.x=S(0,n),this.y=S(0,e),this.radius=5,this.vectorX=S(-5,5)/2,this.ORIGINAL_WEIGHT=3,this.weight=3}update(){this.x+=this.vectorX,this.y+=this.weight,this.weight+=.05,this.checkCanvasSideCollision(),this.checkCanvasBottomCollision(),this.checkTopTitleCollision()}checkCanvasSideCollision(){const t=this.x-this.radius<0,n=this.x+this.radius>this.width;(t||n)&&(this.vectorX*=-1)}checkCanvasBottomCollision(){this.y>=this.height&&(this.y=0,this.weight=this.ORIGINAL_WEIGHT)}checkTopTitleCollision(){const t=this.x<this.titleDomRect.x+this.titleDomRect.width&&this.x>this.titleDomRect.x,n=115-this.radius,e=this.y<this.titleDomRect.y-n+this.titleDomRect.height&&this.y>this.titleDomRect.y-n;t&&e&&(this.y-=1,this.weight*=-.75)}draw(){this.context.fillStyle="cyan",this.context.beginPath(),k(this.context,this.x,this.y,this.radius),this.context.fill()}}class z{constructor(t,n,e){this.canvas=t,this.context=x(this.canvas),this.title=n,this.particlesAmount=e,this.initialize()}initialize(){this.particlesArray=[];for(let t=0;t<this.particlesAmount;t++){const t=new H(this.context,this.canvas.width,this.canvas.height,this.title);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}function M(t,n){var e;if(!n)return document.querySelector(t);return(null===(e=null==n?void 0:n.tagName)||void 0===e?void 0:e.includes("-"))?n.shadowRoot.querySelector(t):n.querySelector(t)}const T="\n:host {\n    --bg-primary: #fafafa;\n    --color-primary: #323232;\n    --semi-transparent-bg: hsla(0, 0%, 100%, .7);\n    --border-color: #dbdbdb;\n    --scrollbar-track-bg-color: #fff;\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0\n}\n\n::backdrop {\n    --backdrop-bg-color: hsla(0, 0%, 100%, .5);\n    --scrollbar-track-bg-color: #fff;\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0\n}\n",_="\n\n@media(prefers-color-scheme:dark) {\n    :host {\n        --bg-primary: #050505;\n        --color-primary: #cdcdcd;\n        --semi-transparent-bg: rgba(0, 0, 0, .7);\n        --scrollbar-track-bg-color: #000;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n        --selection-bg: #838383;\n        --selection-color: #fff\n    }\n\n    ::backdrop {\n        --backdrop-bg-color: rgba(0, 0, 0, .5);\n        --scrollbar-track-bg-color: #000;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f\n    }\n}\n",P="\n@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap);\n\n@media(prefers-reduced-motion:reduce) {\n    *, :after, :before {\n        animation: none !important;\n        transition: none !important\n    }\n}\n\n*, :after, :before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0\n}\n\n::-moz-selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: currentColor\n}\n\n::selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: currentColor\n}\n\n:is(ul, ol) {\n    list-style-type: none\n}\n\nbutton {\n    background-color: transparent;\n    border-color: transparent;\n    color: inherit;\n    font-family: inherit\n}\n\nbutton:hover {\n    cursor: pointer\n}\n\nbutton:hover:disabled {\n    cursor: not-allowed\n}\n\ninput {\n    font-family: inherit\n}\n\ninput, input:focus {\n    border-color: transparent\n}\n\ninput:focus {\n    outline: transparent\n}\n\ntextarea {\n    font-family: inherit\n}\n\ntextarea, textarea:focus {\n    border-color: transparent\n}\n\ntextarea:focus {\n    outline: transparent\n}\n\na {\n    color: inherit;\n    text-decoration: none\n}\n\na:visited {\n    color: currentColor\n}\n\nlabel:hover {\n    cursor: pointer\n}\n\nfieldset {\n    border-color: transparent\n}\n\nlegend {\n    position: static\n}\n\ndialog {\n    inset: 50%;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    translate: -50% -50%;\n    z-index: 0\n}\n\ndialog, select {\n    border: transparent\n}\n\nselect {\n    font-family: inherit\n}\n\nselect:hover {\n    cursor: pointer\n}\n\noption {\n    font-family: inherit\n}\n\n:is(p, h1, h2, h3, h4, h5, h6, span):empty {\n    display: none !important\n}\n\n\n::-webkit-scrollbar {\n    background-color: var(--scrollbar-track-bg-color);\n    border-radius: 100vmax;\n    margin-block: 15px;\n    width: 10px\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-thumb-bg-color);\n    border: 3px solid var(--bg-primary);\n    border-radius: 100vmax\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background-color: var(--scrollbar-thumb-bg-color--hover)\n}\n\n::-webkit-scrollbar-thumb:active {\n    background-color: var(--scrollbar-thumb-bg-color--active)\n}\n\n@supports(scrollbar-color:black white) {\n    :root {\n        scrollbar-color: var(--scrollbar-thumb-bg-color) var(--scrollbar-track-bg-color);\n        scrollbar-width: thin\n    }\n}\n",E=document.createElement("template");E.innerHTML=`\n  <style>\n    /* Reset */\n    ${T}\n    ${P}\n    ${_}\n    /* Actual style */\n    \n .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n     filter: invert(100%) hue-rotate(270deg);\n\n     transition: filter 600ms ease-in-out;\n }\n\n .web-component__title{\n  position: relative;\n\n  inset:50%;\n\n  width: 50%;\n  translate: -50% -50%;\n\n  text-align: center;\n\n  z-index: 69420;\n\n  padding: 15px;\n  font-size: 3vw;\n\n  border: 3px solid currentColor;\n  border-bottom: transparent;\n }\n\n \n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n <h2 class="web-component__title">Boucing effect</h2> \n\n`;class R extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const t=this.attachShadow({mode:"open"}),n=E.content.cloneNode(!0);t.appendChild(n),this.canvas=M("canvas",this.shadowRoot),this.context=x(this.canvas),this.webComponent=M("falling-particles"),this.titleHeading=M("h2",this.shadowRoot),this.effectHandler=new z(this.canvas,this.titleHeading,100),this.resizeCanvas()}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.effectHandler=new z(this.canvas,this.titleHeading,100),A(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){A(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new z(this.canvas,this.titleHeading,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,e){switch(t){case"is-playing":"true"===e?this.animateCanvas():this.cancelCanvasAnimation();break}}}function L(t,n,e,...i){let s=(a=t,Array.from(a));var a;let r=[];return r=!!i.length?s.splice(n,e,...i):s.splice(n,e),{removedItems:r,newArray:s}}customElements.define("falling-particles",R);class I{constructor(t,n,e){this.context=t,this.width=n,this.height=e,this.x=S(10,n),this.y=this.height,this.radius=S(50,100),this.vectorX=S(1.5,3),this.vectorY=S(0,n)}update(){this.x+=this.vectorX,this.y-=this.vectorY;this.radius>=65&&(this.y=0,this.vectorY=S(.1,.5),this.vectorX=.01),this.checkTopCollision(),this.checkHorizontalSidesCollision()}checkTopCollision(){this.y-this.radius<=0&&this.resetParticle()}checkHorizontalSidesCollision(){const t=this.y-this.radius<0,n=this.y+this.radius>this.width;(t||n)&&this.resetParticle()}resetParticle(){this.y=this.height,this.radius=S(50,100),this.vectorY=S(-.5,.5),this.vectorX=S(-.5,.5)}draw(){this.context.fillStyle="orange",this.context.beginPath(),k(this.context,this.x,this.y,this.radius),this.context.fill()}}class ${constructor(t,n){this.canvas=t,this.context=x(this.canvas),this.particlesAmount=n,this.initialize()}initialize(){this.particlesArray=[];for(let t=0;t<this.particlesAmount;t++){const t=new I(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(let t=0;t<this.particlesArray.length;t++){const n=this.particlesArray[t];n.update(),n.draw();n.radius<.1&&(L(this.particlesArray,t,1),t--)}}}const N=document.createElement("template");N.innerHTML=`\n  <style>\n    /* Reset */\n    ${T}\n    ${P}\n    ${_}\n    /* Actual style */\n    \n .web-component__canvas{\n   background-color: white;\n   \n   position: absolute;\n    width: 100%;\n    height: 100%;\n\n    filter: invert(100%) hue-rotate(180deg) blur(20px) contrast(8);\n     \n    transition: filter 600ms ease-in-out;\n }\n\n  @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n        filter: invert(0%) hue-rotate(0deg) blur(20px) contrast(8);\n    }\n  }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class X extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const t=this.attachShadow({mode:"open"}),n=N.content.cloneNode(!0);t.appendChild(n),this.canvas=M("canvas",this.shadowRoot),this.context=x(this.canvas),this.effectHandler=new $(this.canvas,50),this.resizeCanvas()}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.effectHandler=new $(this.canvas,50),A(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){A(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new $(this.canvas,50),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,e){M("fire-effect");switch(t){case"is-playing":"true"===e?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("fire-effect",X);class W{}const F=document.createElement("template");F.innerHTML=`\n  <style>\n    /* Reset */\n    ${T}\n    ${P}\n    ${_}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class Y extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const t=this.attachShadow({mode:"open"}),n=F.content.cloneNode(!0);t.appendChild(n),this.canvas=M("canvas",this.shadowRoot),this.context=x(this.canvas),this.effectHandler=new W,this.resizeCanvas()}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.effectHandler=new W,A(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){A(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new W,this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,e){M("matrix-effect");switch(t){case"is-playing":"true"===e?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("matrix-effect",Y);class q{constructor(t,n,e){this.context=t,this.width=n,this.height=e,this.x=S(0,n),this.y=S(0,e),this.radius=S(20,50),this.vectorX=S(-.5,.5),this.vectorY=S(-.5,.5)}update(){this.x+=this.vectorX,this.y+=this.vectorY,this.checkHorizontalCollisions(),this.checkVerticalCollisions()}checkHorizontalCollisions(){const t=this.x-this.radius<=0,n=this.x+this.radius>=this.width;(t||n)&&(this.vectorX*=-1)}checkVerticalCollisions(){const t=this.y+this.radius>=this.height;(this.y-this.radius<=0||t)&&(this.vectorY*=-1)}draw(){this.context.fillStyle="white",this.context.beginPath(),k(this.context,this.x,this.y,this.radius),this.context.fill()}}class D{constructor(t,n){this.canvas=t,this.context=x(this.canvas),this.particlesAmount=n,this.initialize()}initialize(){this.particlesArray=[];for(let t=0;t<this.particlesAmount;t++){const t=new q(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}const O=document.createElement("template");O.innerHTML=`\n  <style>\n    /* Reset */\n    ${T}\n    ${P}\n    ${_}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n\n    filter: invert(100%) hue-rotate(180deg) blur(5px) contrast(20);\n\n    transition: \n      filter 600ms ease-in-out;\n }\n\n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg) blur(5px) contrast(20);\n    }\n}\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class J extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const t=this.attachShadow({mode:"open"}),n=O.content.cloneNode(!0);t.appendChild(n),this.canvas=M("canvas",this.shadowRoot),this.context=x(this.canvas),this.effectHandler=new D(this.canvas,100),this.resizeCanvas()}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.effectHandler=new D(this.canvas,100),A(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){A(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new D(this.canvas,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,e){M("metaballs-effect");switch(t){case"is-playing":"true"===e?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("metaballs-effect",J);class B{constructor(t,n,e){this.context=t,this.width=n,this.height=e,this.x=S(0,n),this.y=S(0,e),this.radius=S(.5,3),this.vectorX=S(-5,5)/2,this.vectorY=S(-5,5)/2}update(){this.x+=this.vectorX,this.y+=this.vectorY,this.checkHorizontalCollisions(),this.checkVerticalCollisions()}checkHorizontalCollisions(){const t=this.x-this.radius<=0,n=this.x+this.radius>=this.width;(t||n)&&(this.vectorX*=-1)}checkVerticalCollisions(){const t=this.y+this.radius>=this.height;(this.y-this.radius<=0||t)&&(this.vectorY*=-1)}draw(){this.context.fillStyle="white",this.context.beginPath(),k(this.context,this.x,this.y,2*this.radius),this.context.closePath(),this.context.fill()}}class G{constructor(t,n){this.canvas=t,this.context=x(this.canvas),this.particlesArray=[],this.particlesAmount=n,this.initializeArray()}initializeArray(){for(let t=0;t<this.particlesAmount;t++){const t=new B(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}const V=document.createElement("template");V.innerHTML=`\n  <style>\n    /* Reset */\n    ${T}\n    ${P}\n    ${_}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n    filter: invert(100%) hue-rotate(180deg);\n\n    transition: filter 600ms ease-in-out;\n }\n\n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n    <canvas class="web-component__canvas"></canvas>\n\n`;class U extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const t=this.attachShadow({mode:"open"}),n=V.content.cloneNode(!0);t.appendChild(n),this.canvas=M("canvas",this.shadowRoot),this.context=x(this.canvas),this.effectHandler=new G(this.canvas,100),this.resizeCanvas()}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.effectHandler=new G(this.canvas,100),A(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen),this.animateCanvas()}resizeCanvas(){A(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new G(this.canvas,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,e){const i=M("moving-particles");switch(t){case"is-playing":"true"===e?(this.animateCanvas(),s="hide",i.classList.remove(s)):(this.cancelCanvasAnimation(),function(t,n){t.classList.add(n)}(i,"hide"));break}var s}}customElements.define("moving-particles",U),t("hello world")})()})();