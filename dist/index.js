(()=>{"use strict";(()=>{function t(t){return t.getContext("2d")}function n(t,n,i){t.width=n,t.height=i}function i(t,n,i,e){t.arc(n,i,e,0,2*Math.PI)}class e{constructor(t,n,i,e){this.context=t,this.width=n,this.height=i,this.offset=e,this.length=e,this.growthExponent=0,this.x=this.width/2,this.y=this.height/2,this.rotation=0,this.colorLightness=0}update(){this.length+=this.growthExponent,this.rotation+=.5,this.growthExponent+=.075,this.colorLightness+=.75,this.checkGrowthOverflow()}checkGrowthOverflow(){this.length>=this.width&&this.length>=this.height&&(this.length=1,this.growthExponent=0,this.rotation=0,this.colorLightness=0)}draw(){var t,n,i,e;this.context.save(),t=this.context,n=this.width/2,i=this.height/2,e=this.rotation*Math.PI/180,t.translate(n,i),t.rotate(e),this.context.strokeStyle=`hsl(0deg 0% ${this.colorLightness}%)`,this.context.lineWidth=5;const s=-1*this.length/2,a=-1*this.length/2;this.context.strokeRect(s,a,this.length,this.length),this.context.restore()}}class s{constructor(n,i){this.canvas=n,this.context=t(this.canvas),this.particlesAmount=i,this.particlesArray=[],this.initialize()}initialize(){let t=0;for(let n=0;n<this.particlesAmount;n++){t=100*n;const i=new e(this.context,this.canvas.width,this.canvas.height,t);this.particlesArray.push(i)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}function a(t,n){var i;if(!n)return document.querySelector(t);return(null===(i=null==n?void 0:n.tagName)||void 0===i?void 0:i.includes("-"))?n.shadowRoot.querySelector(t):n.querySelector(t)}function h(t,n){return n.appendChild(t)}const c="\n:host {\n    --bg-primary: #fafafa;\n    --color-primary: #323232;\n    --semi-transparent-bg: hsla(0, 0%, 100%, .7);\n    --border-color: #dbdbdb;\n    --scrollbar-track-bg-color: #fff;\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0\n}\n\n::backdrop {\n    --backdrop-bg-color: hsla(0, 0%, 100%, .5);\n    --scrollbar-track-bg-color: #fff;\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0\n}\n",r="\n\n@media(prefers-color-scheme:dark) {\n    :host {\n        --bg-primary: #050505;\n        --color-primary: #cdcdcd;\n        --semi-transparent-bg: rgba(0, 0, 0, .7);\n        --scrollbar-track-bg-color: #000;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n        --selection-bg: #838383;\n        --selection-color: #fff\n    }\n\n    ::backdrop {\n        --backdrop-bg-color: rgba(0, 0, 0, .5);\n        --scrollbar-track-bg-color: #000;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f\n    }\n}\n",o="\n@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap);\n\n@media(prefers-reduced-motion:reduce) {\n    *, :after, :before {\n        animation: none !important;\n        transition: none !important\n    }\n}\n\n*, :after, :before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0\n}\n\n::-moz-selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: currentColor\n}\n\n::selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: currentColor\n}\n\n:is(ul, ol) {\n    list-style-type: none\n}\n\nbutton {\n    background-color: transparent;\n    border-color: transparent;\n    color: inherit;\n    font-family: inherit\n}\n\nbutton:hover {\n    cursor: pointer\n}\n\nbutton:hover:disabled {\n    cursor: not-allowed\n}\n\ninput {\n    font-family: inherit\n}\n\ninput, input:focus {\n    border-color: transparent\n}\n\ninput:focus {\n    outline: transparent\n}\n\ntextarea {\n    font-family: inherit\n}\n\ntextarea, textarea:focus {\n    border-color: transparent\n}\n\ntextarea:focus {\n    outline: transparent\n}\n\na {\n    color: inherit;\n    text-decoration: none\n}\n\na:visited {\n    color: currentColor\n}\n\nlabel:hover {\n    cursor: pointer\n}\n\nfieldset {\n    border-color: transparent\n}\n\nlegend {\n    position: static\n}\n\ndialog {\n    inset: 50%;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    translate: -50% -50%;\n    z-index: 0\n}\n\ndialog, select {\n    border: transparent\n}\n\nselect {\n    font-family: inherit\n}\n\nselect:hover {\n    cursor: pointer\n}\n\noption {\n    font-family: inherit\n}\n\n:is(p, h1, h2, h3, h4, h5, h6, span):empty {\n    display: none !important\n}\n\n\n::-webkit-scrollbar {\n    background-color: var(--scrollbar-track-bg-color);\n    border-radius: 100vmax;\n    margin-block: 15px;\n    width: 10px\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-thumb-bg-color);\n    border: 3px solid var(--bg-primary);\n    border-radius: 100vmax\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background-color: var(--scrollbar-thumb-bg-color--hover)\n}\n\n::-webkit-scrollbar-thumb:active {\n    background-color: var(--scrollbar-thumb-bg-color--active)\n}\n\n@supports(scrollbar-color:black white) {\n    :root {\n        scrollbar-color: var(--scrollbar-thumb-bg-color) var(--scrollbar-track-bg-color);\n        scrollbar-width: thin\n    }\n}\n",l=document.createElement("template");l.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n     filter: invert(100%) hue-rotate(270deg);\n\n     transition: filter 600ms ease-in-out;\n }\n \n@media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n    filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class d extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=l.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.webComponent=a("cube-warp"),this.effectHandler=new s(this.canvas,10)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new s(this.canvas,10),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new s(this.canvas,10),this.animateCanvas())}animateCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}function v(t,n,i=!0,e=!0){if(t>n||n<t)throw new Error("Unexpected error occured in the passed argument values: min > max or max < min");const s=i&&!e,a=!i&&e;return i&&e?Math.floor(Math.random()*(n-t+1))+t:s?Math.floor(Math.random()*(n-t))+t:a?Math.floor(Math.random()*(n-t))+t+1:Math.floor(Math.random()*(n-t-1))+t+1}customElements.define("cube-warp",d);class m{constructor(t,n,i,e){this.context=t,this.width=n,this.height=i,this.title=e,this.titleDomRect=this.title.getBoundingClientRect(),this.x=v(0,n),this.y=v(0,i),this.radius=5,this.vectorX=v(-5,5)/2,this.ORIGINAL_WEIGHT=3,this.weight=3}update(){this.x+=this.vectorX,this.y+=this.weight,this.weight+=.05,this.checkCanvasSideCollision(),this.checkCanvasBottomCollision(),this.checkTopTitleCollision()}checkCanvasSideCollision(){const t=this.x-this.radius<0,n=this.x+this.radius>this.width;(t||n)&&(this.vectorX*=-1)}checkCanvasBottomCollision(){this.y>=this.height&&(this.y=0,this.weight=this.ORIGINAL_WEIGHT)}checkTopTitleCollision(){const t=this.x<this.titleDomRect.x+this.titleDomRect.width&&this.x>this.titleDomRect.x,n=this.y<.75*this.titleDomRect.y-40+this.titleDomRect.height&&this.y>.75*this.titleDomRect.y-40;t&&n&&(this.y-=1,this.weight*=-.75)}draw(){this.context.fillStyle="cyan",this.context.beginPath(),i(this.context,this.x,this.y,this.radius),this.context.fill()}}class u{constructor(n,i,e){this.canvas=n,this.context=t(this.canvas),this.title=i,this.particlesAmount=e,this.initialize()}initialize(){this.particlesArray=[];for(let t=0;t<this.particlesAmount;t++){const t=new m(this.context,this.canvas.width,this.canvas.height,this.title);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}const g=document.createElement("template");g.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n     filter: invert(100%) hue-rotate(270deg);\n\n     transition: filter 600ms ease-in-out;\n }\n\n .web-component__title{\n  position: absolute;\n\n  inset:50%;\n\n  width: 50%;\n  height: 75px;\n  translate: -50% -50%;\n\n  text-align: center;\n\n  z-index: 69420;\n\n  padding: 15px;\n  font-size: 3vw;\n\n  border: 3px solid currentColor;\n  border-bottom: transparent;\n }\n\n \n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n <h2 class="web-component__title">Boucing effect</h2> \n\n`;class b extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=g.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.webComponent=a("falling-particles"),this.titleHeading=a("h2",this.shadowRoot),this.effectHandler=new u(this.canvas,this.titleHeading,100)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new u(this.canvas,this.titleHeading,100),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new u(this.canvas,this.titleHeading,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}function p(t,n,i,...e){let s=(a=t,Array.from(a));var a;let h=[];return h=!!e.length?s.splice(n,i,...e):s.splice(n,i),{removedItems:h,newArray:s}}customElements.define("falling-particles",b);class f{constructor(t,n,i){this.context=t,this.width=n,this.height=i,this.x=v(10,n),this.y=this.height,this.radius=v(50,100),this.vectorX=v(1.5,3),this.vectorY=v(0,n)}update(){this.x+=this.vectorX,this.y-=this.vectorY;this.radius>=65&&(this.y=0,this.vectorY=v(.1,.5),this.vectorX=.01),this.checkTopCollision(),this.checkHorizontalSidesCollision()}checkTopCollision(){this.y-this.radius<=0&&this.resetParticle()}checkHorizontalSidesCollision(){const t=this.y-this.radius<0,n=this.y+this.radius>this.width;(t||n)&&this.resetParticle()}resetParticle(){this.y=this.height,this.radius=v(50,100),this.vectorY=v(-.5,.5),this.vectorX=v(-.5,.5)}draw(){this.context.fillStyle="orange",this.context.beginPath(),i(this.context,this.x,this.y,this.radius),this.context.fill()}}class w{constructor(n,i){this.canvas=n,this.context=t(this.canvas),this.particlesAmount=i,this.initialize()}initialize(){this.particlesArray=[];for(let t=0;t<this.particlesAmount;t++){const t=new f(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(let t=0;t<this.particlesArray.length;t++){const n=this.particlesArray[t];n.update(),n.draw();n.radius<.1&&(p(this.particlesArray,t,1),t--)}}}const C=document.createElement("template");C.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n .web-component__canvas{\n   background-color: white;\n   \n   position: absolute;\n    width: 100%;\n    height: 100%;\n\n    filter: invert(100%) hue-rotate(180deg) blur(20px) contrast(8);\n     \n    transition: filter 600ms ease-in-out;\n }\n\n  @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n        filter: invert(0%) hue-rotate(0deg) blur(20px) contrast(8);\n    }\n  }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class y extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=C.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.effectHandler=new w(this.canvas,50)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new w(this.canvas,50),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new w(this.canvas,50),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){a("fire-effect");switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("fire-effect",y);const{log:x,error:A,table:S,time:k,timeEnd:z,timeStamp:H,timeLog:M,assert:T,clear:_,count:P,countReset:E,group:L,groupCollapsed:R,groupEnd:$,trace:I,profile:N,profileEnd:X,warn:W,debug:F,info:q,dir:Y,dirxml:O}=console;function D(t,n){const i=[];for(let e=t;e<=n;e++){const t=String.fromCodePoint(e);i.push(t)}return i}function J(){const t=function(){const t=D(65,90),n=D(97,122);return t.concat(n)}(),n=D(12352,12447);return{letters:t.concat(n),numberDigits:D(48,57),symbols:D(33,47).concat(D(58,64),D(91,96),D(123,126),D(155,159))}}function V(t){return JSON.parse(t)}class G{constructor(t,n,i,e,s,a){this.context=t,this.x=e,this.y=s,this.fontSize=a,this.text="",this.width=n,this.height=i,this.characterSets=J()}update(){this.text=this.getRandomString();this.y*this.fontSize>this.height?this.y=Math.floor(5*Math.random()):this.y++}draw(){const t=function(t,n,i,e,s,a){const h=t.createLinearGradient(n,i,e,s);for(let t=0;t<a.length;t++){const n=a[t];h.addColorStop(t,n)}return h}(this.context,0,this.height,this.width,0,["#0aff0a","cyan"]);this.context.fillStyle=t,this.context.font=`${this.fontSize}px Consolas`,this.context.textAlign="center",this.context.fillText(this.text,this.x*this.fontSize,this.y*this.fontSize)}getRandomString(){const t=["letters","numberDigits","symbols"],n=t[v(0,t.length-1)],i=this.characterSets[n];return i[v(0,i.length-1)]}}class B{constructor(n){this.canvas=n,this.context=t(this.canvas),this.fontSize=20,this.columns=this.canvas.width/this.fontSize,this.symbolsArray=[],this.initialize()}initialize(){for(let t=0;t<this.columns;t++){const n=t,i=Math.random()*this.canvas.height,e=new G(this.context,this.canvas.width,this.canvas.height,n,i,this.fontSize);this.symbolsArray.push(e),this.columns=this.canvas.width/this.fontSize}}animateSymbols(){for(const t of this.symbolsArray)t.update(),t.draw()}resize(t,n){this.canvas.width=t,this.canvas.height=n,this.symbolsArray=[],this.initialize()}}const U=document.createElement("template");U.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class j extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=U.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.effectHandler=new B(this.canvas)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new B(this.canvas),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.effectHandler.resize(this.canvas.width,this.canvas.height))}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateSymbols();setTimeout((()=>{this.animationId=requestAnimationFrame(this.animateCanvas)}),1e3/30)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){a("matrix-effect"),V(n);const e=V(i);switch(t){case"is-playing":{const t=!!e;x({isPlaying:t}),t?this.animateCanvas():this.cancelCanvasAnimation();break}}}}customElements.define("matrix-effect",j);class K{constructor(t,n,i){this.context=t,this.width=n,this.height=i,this.x=v(0,n),this.y=v(0,i),this.radius=v(20,50),this.vectorX=v(-15,15)/this.radius,this.vectorY=v(-15,15)/this.radius}update(){this.x+=this.vectorX,this.y+=this.vectorY,this.checkHorizontalCollisions(),this.checkVerticalCollisions()}checkHorizontalCollisions(){const t=this.x-this.radius<=0,n=this.x+this.radius>=this.width;(t||n)&&(this.vectorX*=-1)}checkVerticalCollisions(){const t=this.y+this.radius>=this.height;(this.y-this.radius<=0||t)&&(this.vectorY*=-1)}draw(){this.context.fillStyle="white",this.context.beginPath(),i(this.context,this.x,this.y,this.radius),this.context.fill()}}class Q{constructor(n,i){this.canvas=n,this.context=t(this.canvas),this.particlesAmount=i,this.initialize()}initialize(){this.particlesArray=[];for(let t=0;t<this.particlesAmount;t++){const t=new K(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}const Z=document.createElement("template");Z.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n\n    filter: invert(100%) hue-rotate(180deg) blur(10px) contrast(30);\n\n    transition: \n      filter 600ms ease-in-out;\n }\n\n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg) blur(10px) contrast(30);\n    }\n}\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class tt extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=Z.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.effectHandler=new Q(this.canvas,100)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new Q(this.canvas,100),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen)}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new Q(this.canvas,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){a("metaballs-effect");switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("metaballs-effect",tt);class nt{constructor(t,n,i){this.context=t,this.width=n,this.height=i,this.x=v(0,n),this.y=v(0,i),this.radius=v(.5,5),this.vectorX=v(-5,5)/2,this.vectorY=v(-5,5)/2;(0===this.vectorX||0===this.vectorY)&&(this.vectorX=v(1,5),this.vectorY=v(-5,-1))}update(){this.x+=this.vectorX,this.y+=this.vectorY,this.checkHorizontalCollisions(),this.checkVerticalCollisions()}checkHorizontalCollisions(){const t=this.x-this.radius<=0,n=this.x+this.radius>=this.width;(t||n)&&(this.vectorX*=-1)}checkVerticalCollisions(){const t=this.y+this.radius>=this.height;(this.y-this.radius<=0||t)&&(this.vectorY*=-1)}draw(){this.context.fillStyle="white",this.context.beginPath(),i(this.context,this.x,this.y,2*this.radius),this.context.closePath(),this.context.fill()}}class it{constructor(n,i){this.canvas=n,this.context=t(this.canvas),this.particlesArray=[],this.particlesAmount=i,this.initializeArray()}initializeArray(){for(let t=0;t<this.particlesAmount;t++){const t=new nt(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}const et=document.createElement("template");et.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n    filter: invert(100%) hue-rotate(180deg);\n\n    transition: filter 600ms ease-in-out;\n }\n\n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n    <canvas class="web-component__canvas"></canvas>\n\n`;class st extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=et.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.effectHandler=new it(this.canvas,100)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new it(this.canvas,100),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen),this.animateCanvas()}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new it(this.canvas,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("moving-particles",st);class at{constructor(t,n,i){this.context=t,this.width=n,this.height=i,this.x=v(0,n),this.y=v(0,i),this.radius=3,this.vectorX=v(-2,2)/v(1,3),this.vectorY=v(-2,2)/v(1,3)}update(){this.x+=this.vectorX,this.y+=this.vectorY,this.checkHorizontalCollisions(),this.checkVerticalCollisions()}checkHorizontalCollisions(){const t=this.x-this.radius<=0,n=this.x+this.radius>=this.width;(t||n)&&(this.vectorX*=-1)}checkVerticalCollisions(){const t=this.y+this.radius>=this.height;(this.y-this.radius<=0||t)&&(this.vectorY*=-1)}draw(){this.context.fillStyle="white",this.context.beginPath(),i(this.context,this.x,this.y,2*this.radius),this.context.fill()}}class ht{constructor(n,i){this.canvas=n,this.context=t(this.canvas),this.particlesArray=[],this.particlesAmount=i,this.initializeArray()}initializeArray(){for(let t=0;t<this.particlesAmount;t++){const t=new at(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}drawLine(t,n,i){this.context.beginPath(),this.context.strokeStyle=i,this.context.moveTo(t.x,t.y),this.context.lineTo(n.x,n.y),this.context.stroke(),this.context.closePath()}animateParticles(){for(let t=0;t<this.particlesArray.length;t++){const n=this.particlesArray[t];n.update(),n.draw();for(let t=0;t<this.particlesArray.length;t++){const i=this.particlesArray[t],e=i.x-n.x,s=i.y-n.y,a=Math.sqrt(Math.pow(e,2)+Math.pow(s,2));a<=100&&this.drawLine(n,i,`rgba(255, 255, 255, ${1-a/100})`)}}}}const ct=document.createElement("template");ct.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n    filter: invert(100%) hue-rotate(180deg);\n\n    transition: filter 600ms ease-in-out;\n }\n\n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n    <canvas class="web-component__canvas"></canvas>\n\n`;class rt extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=ct.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.effectHandler=new ht(this.canvas,100)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new ht(this.canvas,100),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen),this.animateCanvas()}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new ht(this.canvas,150),this.animateCanvas())}animateCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("network-particles",rt);class ot{constructor(t,n,i){this.context=t,this.width=n,this.height=i,this.x=this.width/2,this.y=this.height/2,this.size=1,this.vectorX=v(-2,2)/v(1,3),this.hue=0,this.rotation=60}resetParticle(){this.x=this.width/2,this.y=this.height/2,this.size=1}update(){this.x+=this.vectorX,this.hue+=.1,this.checkHorizontalCollisions(),this.checkVerticalCollisions()}checkHorizontalCollisions(){const t=this.x-this.size<=0,n=this.x+this.size>=this.width;(t||n)&&this.resetParticle()}checkVerticalCollisions(){const t=this.y+this.size>=this.height;(this.y-this.size<=0||t)&&this.resetParticle()}createCircle(){i(this.context,this.x,this.y,2*this.size)}draw(){this.context.save(),this.context.beginPath(),this.context.fillStyle=`hsl(${this.hue}deg 100% 50%)`,this.createCircle(),this.context.fill(),this.context.restore()}}class lt{constructor(n,i){this.canvas=n,this.context=t(this.canvas),this.particlesArray=[],this.particlesAmount=i,this.initializeArray()}initializeArray(){for(let t=0;t<this.particlesAmount;t++){const t=new ot(this.context,this.canvas.width,this.canvas.height);this.particlesArray.push(t)}}animateParticles(){for(const t of this.particlesArray)t.update(),t.draw()}}const dt=document.createElement("template");dt.innerHTML=`\n  <style>\n    /* Reset */\n    ${c}\n    ${o}\n    ${r}\n    /* Actual style */\n    \n  .web-component__canvas{\n    position: absolute;\n\n    width: 100%;\n    height: 100%;\n    filter: invert(100%) hue-rotate(180deg);\n\n    transition: filter 600ms ease-in-out;\n }\n\n @media(prefers-color-scheme:dark) {\n    .web-component__canvas{\n       filter: invert(0%) hue-rotate(0deg);\n    }\n}\n\n  </style>\n  \n  \n    <canvas class="web-component__canvas"></canvas>\n\n`;class vt extends HTMLElement{constructor(){super(),this.animateCanvas=this.animateCanvas.bind(this),this.resetCanvasToMatchScreen=this.resetCanvasToMatchScreen.bind(this);const n=this.attachShadow({mode:"open"}),i=dt.content.cloneNode(!0);n.appendChild(i),this.canvas=a("canvas",this.shadowRoot),this.context=t(this.canvas),this.effectHandler=new lt(this.canvas,100)}static get observedAttributes(){return["is-playing"]}get isPlaying(){const t=this.getAttribute("is-playing");return JSON.parse(t)}set isPlaying(t){const n=t.toString();this.setAttribute("is-playing",n)}connectedCallback(){this.resizeCanvas(),this.effectHandler=new lt(this.canvas,100),n(this.canvas,this.clientWidth,this.clientHeight),window.addEventListener("resize",this.resetCanvasToMatchScreen),this.animateCanvas()}resizeCanvas(){n(this.canvas,this.clientWidth,this.clientHeight)}resetCanvasToMatchScreen(){!this.isPlaying||(this.resizeCanvas(),this.cancelCanvasAnimation(),this.effectHandler=new lt(this.canvas,100),this.animateCanvas())}animateCanvas(){this.context.fillStyle="rgba(0,0,0,10%)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.effectHandler.animateParticles(),this.animationId=requestAnimationFrame(this.animateCanvas)}cancelCanvasAnimation(){cancelAnimationFrame(this.animationId)}disconnectedCallback(){this.cancelCanvasAnimation(),window.removeEventListener("resize",this.resetCanvasToMatchScreen)}attributeChangedCallback(t,n,i){switch(t){case"is-playing":"true"===i?this.animateCanvas():this.cancelCanvasAnimation();break}}}customElements.define("neon-particles",vt);const mt=a(".index__effect"),ut=(gt=".index__input",bt?bt.tagName.includes("-")?Array.from(bt.shadowRoot.querySelectorAll(gt)):Array.from(bt.querySelectorAll(gt)):Array.from(document.querySelectorAll(gt)));var gt,bt;function pt(t){!function(t,n){const i=document.createElement(t);e=i,s="is-playing",a="true",e.setAttribute(s,a.toString()),function(t,n){t.classList.add(n)}(i,"index__web-component");var e,s,a;const c=(r=n,Array.from(r.children));var r;c.length?(o=n,l=i,c[0].remove(),h(l,o)):h(i,n);var o,l}(function(t){let n=function(t,n){switch(n.toLowerCase().trim()){case"lowercase":return t.toLowerCase();case"uppercase":return t.toUpperCase();case"titlecase":{let n=t.split(" ");for(let t=0;t<n.length;t++){const i=n[t].substring(0,1).toUpperCase(),e=n[t].slice(1).toLowerCase();n[t]=i+e}return n=n.concat(),n.toString()}default:throw new Error("Formatting text error: unknown option passed in argument")}}(t,"lowercase");return n=function(t,n,i){return t.replaceAll(n,i)}(n," ","-"),n}(t.target.nextElementSibling.innerText),mt)}!function(){for(const t of ut)t.addEventListener("change",pt)}()})()})();