(()=>{"use strict";(()=>{const{log:n,error:e,table:t,time:o,timeEnd:r,timeStamp:a,timeLog:c,assert:l,clear:s,count:i,countReset:b,group:d,groupCollapsed:u,groupEnd:m,trace:p,profile:h,profileEnd:g,warn:f,debug:v,info:k,dir:y,dirxml:C}=console,w="\n:host {\n    --bg-primary: #fafafa;\n    --color-primary: #323232;\n    --semi-transparent-bg: hsla(0, 0%, 100%, .7);\n    --border-color: #dbdbdb;\n    --scrollbar-track-bg-color: #fff;\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0\n}\n\n::backdrop {\n    --backdrop-bg-color: hsla(0, 0%, 100%, .5);\n    --scrollbar-track-bg-color: #fff;\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0\n}\n",x="\n\n@media(prefers-color-scheme:dark) {\n    :host {\n        --bg-primary: #050505;\n        --color-primary: #cdcdcd;\n        --semi-transparent-bg: rgba(0, 0, 0, .7);\n        --scrollbar-track-bg-color: #000;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n        --selection-bg: #838383;\n        --selection-color: #fff\n    }\n\n    ::backdrop {\n        --backdrop-bg-color: rgba(0, 0, 0, .5);\n        --scrollbar-track-bg-color: #000;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f\n    }\n}\n",E="\n@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap);\n\n@media(prefers-reduced-motion:reduce) {\n    *, :after, :before {\n        animation: none !important;\n        transition: none !important\n    }\n}\n\n*, :after, :before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0\n}\n\n::-moz-selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: currentColor\n}\n\n::selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: currentColor\n}\n\n:is(ul, ol) {\n    list-style-type: none\n}\n\nbutton {\n    background-color: transparent;\n    border-color: transparent;\n    color: inherit;\n    font-family: inherit\n}\n\nbutton:hover {\n    cursor: pointer\n}\n\nbutton:hover:disabled {\n    cursor: not-allowed\n}\n\ninput {\n    font-family: inherit\n}\n\ninput, input:focus {\n    border-color: transparent\n}\n\ninput:focus {\n    outline: transparent\n}\n\ntextarea {\n    font-family: inherit\n}\n\ntextarea, textarea:focus {\n    border-color: transparent\n}\n\ntextarea:focus {\n    outline: transparent\n}\n\na {\n    color: inherit;\n    text-decoration: none\n}\n\na:visited {\n    color: currentColor\n}\n\nlabel:hover {\n    cursor: pointer\n}\n\nfieldset {\n    border-color: transparent\n}\n\nlegend {\n    position: static\n}\n\ndialog {\n    inset: 50%;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    translate: -50% -50%;\n    z-index: 0\n}\n\ndialog, select {\n    border: transparent\n}\n\nselect {\n    font-family: inherit\n}\n\nselect:hover {\n    cursor: pointer\n}\n\noption {\n    font-family: inherit\n}\n\n:is(p, h1, h2, h3, h4, h5, h6, span):empty {\n    display: none !important\n}\n\n\n::-webkit-scrollbar {\n    background-color: var(--scrollbar-track-bg-color);\n    border-radius: 100vmax;\n    margin-block: 15px;\n    width: 10px\n}\n\n::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-thumb-bg-color);\n    border: 3px solid var(--bg-primary);\n    border-radius: 100vmax\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background-color: var(--scrollbar-thumb-bg-color--hover)\n}\n\n::-webkit-scrollbar-thumb:active {\n    background-color: var(--scrollbar-thumb-bg-color--active)\n}\n\n@supports(scrollbar-color:black white) {\n    :root {\n        scrollbar-color: var(--scrollbar-thumb-bg-color) var(--scrollbar-track-bg-color);\n        scrollbar-width: thin\n    }\n}\n",S=document.createElement("template");S.innerHTML=`\n  <style>\n    /* Reset */\n    ${w}\n    ${E}\n    ${x}\n    /* Actual style */\n    \n user-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class $ extends HTMLElement{constructor(){super();const n=this.attachShadow({mode:"open"}),e=S.content.cloneNode(!0);n.appendChild(e)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,e,t){n}}customElements.define("falling-particles",$);const A=document.createElement("template");A.innerHTML=`\n  <style>\n    /* Reset */\n    ${w}\n    ${E}\n    ${x}\n    /* Actual style */\n    \n user-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class L extends HTMLElement{constructor(){super();const n=this.attachShadow({mode:"open"}),e=A.content.cloneNode(!0);n.appendChild(e)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,e,t){n}}customElements.define("fire-effect",L);const H=document.createElement("template");H.innerHTML=`\n  <style>\n    /* Reset */\n    ${w}\n    ${E}\n    ${x}\n    /* Actual style */\n    \n user-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class M extends HTMLElement{constructor(){super();const n=this.attachShadow({mode:"open"}),e=H.content.cloneNode(!0);n.appendChild(e)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,e,t){n}}customElements.define("matrix-effect",M);const T=document.createElement("template");T.innerHTML=`\n  <style>\n    /* Reset */\n    ${w}\n    ${E}\n    ${x}\n    /* Actual style */\n    \n user-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <canvas class="web-component__canvas"></canvas>\n\n`;class _ extends HTMLElement{constructor(){super();const n=this.attachShadow({mode:"open"}),e=T.content.cloneNode(!0);n.appendChild(e)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,e,t){n}}customElements.define("metaballs-effect",_);const R=document.createElement("template");R.innerHTML=`\n  <style>\n    /* Reset */\n    ${w}\n    ${E}\n    ${x}\n    /* Actual style */\n    \n user-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n    <canvas class="web-component__canvas"></canvas>\n\n`;class N extends HTMLElement{constructor(){super();const n=this.attachShadow({mode:"open"}),e=R.content.cloneNode(!0);n.appendChild(e)}static get observedAttributes(){return["is-playing"]}connectedCallback(){const e=this.getBoundingClientRect();n({webComponentDomRect:e})}get isPlaying(){const n=this.getAttribute("is-playing");return JSON.parse(n)}set isPlaying(n){const e=n.toString();this.setAttribute("is-playing",e)}disconnectedCallback(){}attributeChangedCallback(n,e,t){n}}customElements.define("moving-particles",N),n("hello world")})()})();